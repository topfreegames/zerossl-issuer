# Default values for zerossl-issuer.

# Namespace configuration
namespace:
  # The name of the namespace to deploy to
  name: cert-manager
  # Whether to create the namespace if it doesn't exist
  create: false

# Image settings
image:
  repository: tfgco/zerossl-issuer
  tag: latest
  pullPolicy: IfNotPresent

# Resource constraints for the controller
resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

# Replica count for the controller deployment
replicaCount: 1

# Common labels to add to all resources
commonLabels: {}
  # Example:
  # environment: production
  # app.kubernetes.io/part-of: cert-management

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container security context
containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - "ALL"

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Name of the service account to use (if not set, will use release name)
  name: ""
  # Annotations to add to the service account
  annotations: {}

# Node affinity settings
affinity:
  nodeAffinity:
    enabled: false
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
                - arm64
                - ppc64le
                - s390x
            - key: kubernetes.io/os
              operator: In
              values:
                - linux

# Annotations to add to the deployment
podAnnotations: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Health probe settings
livenessProbe:
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10

# Leader election settings
leaderElection:
  enabled: true

# Install CRDs (cert-manager custom resources)
installCRDs: true

# Metrics configuration
metrics:
  # Enable the metrics endpoint
  enabled: true
  # The port to expose metrics on
  port: 8443
  # Whether to use HTTPS for the metrics endpoint
  secure: true
  # Service configuration for metrics
  service:
    # Type of service to create for metrics
    type: ClusterIP
    # Annotations to add to the metrics service
    annotations: {}
  # ServiceMonitor configuration for Prometheus Operator
  serviceMonitor:
    # Whether to create a ServiceMonitor resource for Prometheus Operator
    enabled: false
    # Additional labels for the ServiceMonitor resource
    additionalLabels: {}
    # Namespace where the ServiceMonitor resource should be created
    # If not set, the same namespace as the chart is used
    namespace: ""
    # Interval at which metrics should be scraped
    interval: 30s
    # Timeout for the scrape request
    scrapeTimeout: 10s
    # TLS configuration for scraping
    tlsConfig:
      # Skip TLS verification
      insecureSkipVerify: true 